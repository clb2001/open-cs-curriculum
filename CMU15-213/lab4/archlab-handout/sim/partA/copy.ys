# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:
    irmovq src, %rdi
    irmovq dest, %rsi
    irmovq $3, %rdx
    call copy_block
    ret

# long copy_block(long *src, long *dest, long len)
copy_block:
    irmovq $1, %r10
    irmovq $8, %r8
    irmovq $0, %rax
    andq %rdx, %rdx
    jmp test
loop:
    mrmovq (%rdi), %r9
    addq %r8, %rdi
    mrmovq (%r9), %rsi
    addq %r8, %rsi
    xorq %r9, %rax
    subq %r10, %rdx  
test:
    jne loop
    ret

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
