# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

# Linklist of 3 elements
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi
    call sum_list
    ret

# long sum_list(list_ptr ls)
# start in %rdi
sum_list:
    irmovq $8, %r8
    irmovq $16, %r9
    irmovq $0, %r11
    rrmovq %rdi, %r10
    addq %r8, %r10
    xorq %rax, %rax # set val = 0
    andq %r10, %r10 # set CC
    jmp test
        # 自己的实现还是比较复杂
        # irmovq $0, %rax
        # jmp test
loop:
    mrmovq (%rdi), %r10
    addq %r10, %rax
    mrmovq (%r10), %r12
    addq %r9, %rdi
    addq %r9, %r10
    subq %r11, %r12
        # mrmovq (%rdi), %rsi
        # addq %rsi, %rax
        # mrmovq 8(%rdi), %rdi
test:
        # andq %rdi, %rdi
    jne loop
    ret

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
